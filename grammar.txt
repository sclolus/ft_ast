<complete_command> ::= <list> <separator> | <list>
<list>             ::= <list> <separator_op> <and_or> | <and_or>
<and_or>           ::= <pipeline> | <and_or> "&&" <linebreak> <pipeline>  | <and_or> "||" <linebreak> <pipeline> 
<pipeline>         ::= <pipe_sequence> | '!' <pipe_sequence> 
<pipe_sequence>    ::= <command> | <pipe_sequence> '|' <linebreak> <command> 
<command>          ::= <simple_command> | <compound_command> | <compound_command> <redirect_list> | <function_definition> 
<compound_command> ::= <brace_group> | <subshell> | <for_clause> | <case_clause> | <if_clause> | <while_clause> | <until_clause> 
<subshell>         ::= '(' <compound_list> ')' 
<compound_list>    ::= <term> | <newline_list> <term> | <term> <separator> | <newline_list> <term> <separator> 
<term>             ::= <term> <separator> <and_or> | <and_or> 
<for_clause>       ::= "for" <name> <linebreak> <do_group> | "for" <name> <linebreak> <in> <sequential_sep> <do_group> | "for" <name> <linebreak> <in> <wordlist> <sequential_sep> <do_group> 
<name>             ::= <NAME>                     /* Apply rule 5 */ 
<in>               ::= "in"                       /* Apply rule 6 */ 
<wordlist>         ::= <wordlist> WORD | WORD 
<case_clause>      ::= "case" WORD <linebreak> <in> <linebreak> <case_list> "Esac" | "case" WORD <linebreak> <in> <linebreak> <case_list_ns> <Esac> | "case" WORD <linebreak> <in> <linebreak> "Esac" 
<case_list_ns>     ::= <case_list> <case_item_ns> | <case_item_ns> 
<case_list>        ::= <case_list> <case_item> | <case_item> 
<case_item_ns>     ::= <pattern> ')' <linebreak> | <pattern> ')' <compound_list> <linebreak> | '(' <pattern> ')' <linebreak> | '(' <pattern> ')' <compound_list> <linebreak> 
<case_item>        ::= <pattern> ')' <linebreak> ';' <linebreak> |     <pattern> ')' <compound_list> ';' <linebreak> | '(' <pattern> ')' <linebreak> ';' <linebreak> | '(' <pattern> ')' <compound_list> ';' <linebreak> 
<pattern>          ::=             WORD         /* Apply rule 4 */ | <pattern> '|' WORD         /* Do not apply rule 4 */ 
<if_clause>        ::= "if" <compound_list> "then" <compound_list> else_part "fi" | "if" <compound_list> "then" <compound_list> "fi" 
<else_part>        ::= "elif" <compound_list> "then" <else_part> | "else" <compound_list> 
<while_clause>     ::= "while" <compound_list> <do_group> 
<until_clause>     ::= "until" <compound_list> <do_group> 
<function_definition> ::= <fname> '(' ')' <linebreak> <function_body> 
<function_body>    ::= <compound_command>                /* Apply rule 9 */ | <compound_command> <redirect_list>  /* Apply rule 9 */ 
<fname>            ::= NAME                            /* Apply rule 8 */ 
<brace_group>      ::= '{' <compound_list> '}' 
<do_group>         ::= "do" <compound_list> "done"           /* Apply rule 6 */ 
<simple_command>   ::= <cmd_prefix> <cmd_word> <cmd_suffix> | <cmd_prefix> <cmd_word> | <cmd_prefix> | <cmd_name> <cmd_suffix> | <cmd_name> 
<cmd_name>         ::= WORD                   /* Apply rule 7a */ 
<cmd_word>         ::= WORD                   /* Apply rule 7b */  
<cmd_prefix>       ::= <io_redirect> | <cmd_prefix> <io_redirect> |            ASSIGNMENT_WORD | <cmd_prefix> ASSIGNMENT_WORD 
<cmd_suffix>       ::= <io_redirect> | <cmd_suffix> <io_redirect> |            WORD | <cmd_suffix> WORD 
<redirect_list>    ::= <io_redirect> | <redirect_list> <io_redirect> 
<io_redirect>      ::= <io_file> | IO_NUMBER <io_file> | <io_here> | IO_NUMBER <io_here> 
<io_file>          ::= '<' <filename> | "<&" <filename> | '>' <filename> | ">&"  <filename> | "<<" <filename> | "<>" <filename> | ">|" <filename> 
<filename>         ::= WORD                      /* Apply rule 2 */ 
<io_here>          ::= "<<"     <here_end> | "<<-" <here_end> 
<here_end>         ::= WORD                      /* Apply rule 3 */ 
<newline_list>     ::= ('
')*
<linebreak>        ::= <newline_list>
<separator_op>     ::= '&' | ';'
<separator>        ::= <separator_op> <linebreak> | <newline_list> 
<sequential_sep>   ::= ';' <linebreak>
