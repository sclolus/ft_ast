dafuw___
bruh
____
___
DAFUQ
____
___
DAFUQ
____
___
TEST
____
<syntax>: 
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<expression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<expression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<expression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<expression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-expression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-expression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-xpression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ression> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ession> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ssion> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-sion> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ion> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-on> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-n> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- ::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::= (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- (<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-(<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == FUNC	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
EVAL_FUNC entered
____
___
FT_DELAYED ENTERED
____
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-sp> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-subexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ubexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-bexpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-expr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-xpr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pr> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-sp> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-op> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-sp>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p>)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	->)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	->)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
parser returned: FUNC: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR)	-)+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR): 1
___
TEST
____
 current parser == ONEOF	-+ | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

______________________________________________
assigned oneof parser c = +______________________________________________
parser returned: ONEOF: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- | <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
<invocations> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == &&	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-number> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-umber> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-mber> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ber> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-er> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- 
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-						<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-					<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-					<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-					<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-				<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-				<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-				<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-			<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-			<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-			<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-		<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-		<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-		<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-	<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-	<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-op>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p>	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	->	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	->	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::= '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- '+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-+' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- | '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == &&	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- '-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	--' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- | '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- '/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-/' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- | '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- '*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-*' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- 
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-						<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-					<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-					<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-					<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-				<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-				<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-				<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-			<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-			<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-			<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-		<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-		<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-		<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-	<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-	<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-number> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-umber> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-mber> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ber> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-er> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- ::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::=	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == FUNC	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
EVAL_FUNC entered
____
___
FT_DELAYED ENTERED
____
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == &&	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-6' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- |'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-7' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- |'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-8' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- |'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-9' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- |'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-'0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-0')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-')+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
parser returned: FUNC: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR)	-)+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR): 1
___
TEST
____
 current parser == ONEOF	-+ 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

______________________________________________
assigned oneof parser c = +______________________________________________
parser returned: ONEOF: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- 
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
<invocations> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == &&	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-						<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-					<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-					<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-					<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-				<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-				<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-				<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-			<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-			<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-			<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-		<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-		<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-		<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-	<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-	<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-subexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ubexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-bexpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-expr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-xpr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pr> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- ::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::=  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-  <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	- <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-number> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-umber> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-mber> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ber> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-er> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-sp> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-op> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-sp> <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-sp> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-<number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-<number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-number> 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-number> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-umber> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-mber> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ber> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-er> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- 
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == &&	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-					   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-					   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-				   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-				   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-				   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-			   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-			   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-			   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-		   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-		   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-		   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-	   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-	   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-   <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-   <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-  <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-  <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	- <sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- <sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-<sp> ::= (' ' | '	')+ 

parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-<sp> ::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<sp> ::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<sp> ::= (' ' | '	')+ 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-sp> ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR>	-sp> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> ::= (' ' | '	')+ 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- ::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- ::= (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::= (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-::= (' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::= (' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::= (' ' | '	')+ 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- (' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- (' ' | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-(' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-(' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-(' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-(' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-(' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-(' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-(' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-(' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-(' ' | '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-(' ' | '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-(' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-(' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-(' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-(' ' | '	')+ 

parser returned: ONECHAR(: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR 	-' ' | '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-' ' | '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == FUNC	-' ' | '	')+ 

___
EVAL_FUNC entered
____
___
FT_DELAYED ENTERED
____
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-' ' | '	')+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-' ' | '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR"	-' ' | '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-' ' | '	')+ 

___
TEST
____
 current parser == ONECHAR'	-' ' | '	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	- ' | '	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '	')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '	')+ 

___
TEST
____
 current parser == ONECHAR 	- | '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '	')+ 

___
TEST
____
 current parser == ONECHAR"	-| '	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '	')+ 

___
TEST
____
 current parser == ONECHAR'	-| '	')+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '	')+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '	')+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-| '	')+ 

___
TEST
____
 current parser == &&	-| '	')+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '	')+ 

___
TEST
____
 current parser == ONECHAR 	-| '	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '	')+ 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '	')+ 

___
TEST
____
 current parser == ONECHAR 	- '	')+ 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'	')+ 

___
TEST
____
 current parser == ONECHAR 	-'	')+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'	')+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'	')+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'	')+ 

___
TEST
____
 current parser == ONECHAR"	-'	')+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'	')+ 

___
TEST
____
 current parser == ONECHAR'	-'	')+ 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-	')+ 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-')+ 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ 

___
TEST
____
 current parser == ONECHAR"	-)+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ 

___
TEST
____
 current parser == ONECHAR'	-)+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-)+ 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-)+ 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ 

___
TEST
____
 current parser == ONECHAR"	-)+ 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ 

___
TEST
____
 current parser == ONECHAR'	-)+ 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
parser returned: FUNC: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 

___
TEST
____
 current parser == ONECHAR 	-)+ 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR)	-)+ 

parser returned: ONECHAR): 1
___
TEST
____
 current parser == ONEOF	-+ 

______________________________________________
assigned oneof parser c = +______________________________________________
parser returned: ONEOF: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 

___
TEST
____
 current parser == ONECHAR 	- 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
<invocations> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-

___
TEST
____
 current parser == ONECHAR"	-

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-

___
TEST
____
 current parser == ONECHAR'	-

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-

___
TEST
____
 current parser == &&	-

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-

___
TEST
____
 current parser == ONECHAR"	-

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-

___
TEST
____
 current parser == ONECHAR'	-

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR 	-
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR 	-
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
parser returned: &&: 0
<rule> exited with status: 0
parser returned: +: 1
<syntax> exited with status: 1
___
eval terminated
____
___
LOL
____
				+					
			expression|				
		(+	number+	)		
	&&	|		
(sp+	subexpr&&	sp+	op|	sp+	)(1	2	3	4	5	6	7	8	9	0	)
|	(number+	sp+	op|	sp+	number+	)|	(+	-	/	*	)|	
(_	tab	)|	|	(+	-	/	*	)|	|	(_	tab	)(_	tab	)
(1	2	3	4	5	6	7	8	9	0	)(_	tab	)(_	tab	)(1	2	3	4	5	6	7	8	9	0	)
___
get_grammar_syntax terminated
____
___
TEST
____
 current parser == +	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
expression: 
___
TEST
____
 current parser == +	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == &&	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
sp: 
___
TEST
____
 current parser == |	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-123 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-123 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: +: 0
sp exited with status: 0
parser returned: &&: 0
parser returned: +: 0
___
TEST
____
number: 
___
TEST
____
 current parser == |	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-123 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-23 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-23 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-23 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-3 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-3 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-3 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-3 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 1
parser returned: |: 1
___
TEST
____
 current parser == |	- + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 1
number exited with status: 1
parser returned: |: 1
expression exited with status: 1
___
TEST
____
expression: 
___
TEST
____
 current parser == +	- + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == &&	- + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
sp: 
___
TEST
____
 current parser == |	- + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-+ 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: +: 1
sp exited with status: 1
___
TEST
____
subexpr: 
___
TEST
____
number: 
___
TEST
____
 current parser == |	-+ 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 0
number exited with status: 0
parser returned: &&: 0
subexpr exited with status: 0
parser returned: &&: 0
parser returned: +: 0
___
TEST
____
number: 
___
TEST
____
 current parser == |	-+ 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 0
number exited with status: 0
parser returned: |: 0
expression exited with status: 0
parser returned: +: 1
omg bad input retard : + 123 - 123 / 785 * 45 / 78 - 45