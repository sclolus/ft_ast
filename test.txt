dafuw___
bruh
____
___
DAFUQ
____
___
TEST
____
<syntax>: 
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<expression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<expression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<expression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<expression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-expression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-expression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-xpression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ression> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ession> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ssion> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-sion> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ion> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-on> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-n> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- ::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::= (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- (<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-(<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == FUNC	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
EVAL_FUNC entered
____
___
FT_DELAYED ENTERED
____
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-spe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pe> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-e> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-subexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ubexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-bexpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-expr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-xpr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pr> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-spe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pe> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-e> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-op> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-spe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pe>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-e>)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	->)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	->)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
parser returned: FUNC: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR)	-)+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR): 1
___
TEST
____
 current parser == ONEOF	-+ | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

______________________________________________
assigned oneof parser c = +______________________________________________
parser returned: ONEOF: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- | <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
<invocations> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == &&	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-number> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-umber> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-mber> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ber> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-er> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- 
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-						<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-					<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-					<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-					<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-				<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-				<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-				<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-			<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-			<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-			<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-		<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-		<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-		<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-	<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-	<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-op>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p>	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	->	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	->	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-     ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-    ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-    ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-   ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-   ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-  ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-  ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	- ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- ::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::= '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- '+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-+' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- | '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == &&	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- '-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	--' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- | '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- '/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-/' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- | '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- '*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-*' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- 
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-						<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-					<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-					<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-					<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-				<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-				<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-				<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-			<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-			<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-			<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-		<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-		<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-		<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-	<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-	<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-number>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-umber>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-mber>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ber>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-er>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r>     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	->     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	->     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-     ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-    ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-    ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-   ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-   ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-  ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-  ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	- ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- ::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::= ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- ('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-('1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == FUNC	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
EVAL_FUNC entered
____
___
FT_DELAYED ENTERED
____
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-1' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- | '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == &&	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- '2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-2' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- | '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- '3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-3' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- | '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- '4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-4' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- |'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-5' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- |'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-6' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- |'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-7' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- |'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-8' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- |'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-9' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- |'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-|'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-'0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-0')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-')+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
parser returned: FUNC: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR)	-)+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR): 1
___
TEST
____
 current parser == ONEOF	-+ 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

______________________________________________
assigned oneof parser c = +______________________________________________
parser returned: ONEOF: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- 
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
<invocations> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == &&	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-						<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-					<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-					<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-					<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-				<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-				<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-				<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-			<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-			<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-			<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-		<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-		<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-		<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-	<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-	<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-subexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ubexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-bexpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-expr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-xpr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pr>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r>    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	->    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	->    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-    ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-   ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-   ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-  ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-  ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	- ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- ::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::=  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-  <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	- <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-number> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-umber> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-mber> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ber> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-er> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-spe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pe> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-e> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-op> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-p> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-spe> <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-spe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pe> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-e> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- <number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-<number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-<number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-<number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-<number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-<number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-number> 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-number> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-umber> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-mber> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-ber> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-er> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-r> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	-> 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- 
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == &&	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-					   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-					   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-				   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-				   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-				   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-			   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-			   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-			   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-		   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-		   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-		   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-	   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-	   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-	   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-   <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-   <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-  <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-  <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	- <spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- <spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-<spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-<spe>          ::= (' ' | '	')* 

parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-<spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-<spe>          ::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-<spe>          ::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-<spe>          ::= (' ' | '	')* 

parser returned: ONECHAR<: 1
___
TEST
____
 current parser == STR_ANY	-spe>          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR>	-spe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-pe>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	-e>          ::= (' ' | '	')* 

parser returned: ONECHAR>: 0
___
TEST
____
 current parser == ONECHAR>	->          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: STR_ANY: 1
___
TEST
____
 current parser == ONECHAR>	->          ::= (' ' | '	')* 

parser returned: ONECHAR>: 1
parser returned: &&: 1
<rule_name> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-          ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-          ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-         ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-         ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-        ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-        ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-       ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-       ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-      ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-      ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-     ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-     ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-    ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-    ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-   ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-   ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-  ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-  ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	- ::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- ::= (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-::= (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-::= (' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-::= (' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == STRING	-::= (' ' | '	')* 

parser returned: STRING: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- (' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	- (' ' | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-(' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-(' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-(' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-(' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-(' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-(' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-(' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-(' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-(' ' | '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-(' ' | '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-(' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-(' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-(' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-(' ' | '	')* 

parser returned: ONECHAR(: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-' ' | '	')* 

___
TEST
____
 current parser == ONECHAR 	-' ' | '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-' ' | '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == FUNC	-' ' | '	')* 

___
EVAL_FUNC entered
____
___
FT_DELAYED ENTERED
____
___
TEST
____
<expression>: 
___
TEST
____
 current parser == &&	-' ' | '	')* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-' ' | '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-' ' | '	')* 

___
TEST
____
 current parser == ONECHAR"	-' ' | '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-' ' | '	')* 

___
TEST
____
 current parser == ONECHAR'	-' ' | '	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	- ' | '	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-' | '	')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- | '	')* 

___
TEST
____
 current parser == ONECHAR 	- | '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-| '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-| '	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-| '	')* 

___
TEST
____
 current parser == ONECHAR"	-| '	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-| '	')* 

___
TEST
____
 current parser == ONECHAR'	-| '	')* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-| '	')* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-| '	')* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-| '	')* 

___
TEST
____
 current parser == &&	-| '	')* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-| '	')* 

___
TEST
____
 current parser == ONECHAR 	-| '	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-| '	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-| '	')* 

parser returned: ONECHAR|: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- '	')* 

___
TEST
____
 current parser == ONECHAR 	- '	')* 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-'	')* 

___
TEST
____
 current parser == ONECHAR 	-'	')* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-'	')* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-'	')* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-'	')* 

___
TEST
____
 current parser == ONECHAR"	-'	')* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-'	')* 

___
TEST
____
 current parser == ONECHAR'	-'	')* 

parser returned: ONECHAR': 1
___
TEST
____
 current parser == ANY	-	')* 

parser returned: ANY: 1
___
TEST
____
 current parser == ONECHAR'	-')* 

parser returned: ONECHAR': 1
parser returned: &&: 1
parser returned: |: 1
<parser_literal> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)* 

___
TEST
____
 current parser == ONECHAR 	-)* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)* 

___
TEST
____
 current parser == ONECHAR"	-)* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)* 

___
TEST
____
 current parser == ONECHAR'	-)* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)* 

___
TEST
____
 current parser == ONECHAR 	-)* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)* 

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)* 

___
TEST
____
 current parser == ONECHAR 	-)* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-)* 

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-)* 

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-)* 

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-)* 

___
TEST
____
 current parser == ONECHAR"	-)* 

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-)* 

___
TEST
____
 current parser == ONECHAR'	-)* 

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-)* 

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)* 

___
TEST
____
 current parser == ONECHAR 	-)* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-)* 

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
parser returned: FUNC: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-)* 

___
TEST
____
 current parser == ONECHAR 	-)* 

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-)* 

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR)	-)* 

parser returned: ONECHAR): 1
___
TEST
____
 current parser == ONEOF	-* 

______________________________________________
assigned oneof parser c = *______________________________________________
parser returned: ONEOF: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	- 

___
TEST
____
 current parser == ONECHAR 	- 

parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
<invocations> exited with status: 1
parser returned: |: 1
<term> exited with status: 1
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-

___
TEST
____
 current parser == ONECHAR"	-

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-

___
TEST
____
 current parser == ONECHAR'	-

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<list> exited with status: 1
___
TEST
____
 current parser == *	-

___
TEST
____
 current parser == &&	-

___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR|	-

parser returned: ONECHAR|: 0
parser returned: &&: 0
parser returned: *: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-

___
TEST
____
<list>: 
___
TEST
____
 current parser == &&	-

___
TEST
____
<term>: 
___
TEST
____
<parser_literal>: 
___
TEST
____
 current parser == &&	-

___
TEST
____
 current parser == ONECHAR"	-

parser returned: ONECHAR": 0
parser returned: &&: 0
___
TEST
____
 current parser == &&	-

___
TEST
____
 current parser == ONECHAR'	-

parser returned: ONECHAR': 0
parser returned: &&: 0
parser returned: |: 0
<parser_literal> exited with status: 0
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-

parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
___
TEST
____
<invocations>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR(	-

parser returned: ONECHAR(: 0
parser returned: &&: 0
<invocations> exited with status: 0
parser returned: |: 0
<term> exited with status: 0
parser returned: &&: 0
parser returned: +: 0
<list> exited with status: 0
parser returned: &&: 0
parser returned: +: 1
<expression> exited with status: 1
___
TEST
____
 current parser == +	-

___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-

___
TEST
____
 current parser == ONECHAR 	-

parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-

parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-

parser returned: ONECHAR
: 1
parser returned: &&: 1
<eol> exited with status: 1
___
TEST
____
<eol>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR 	-
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
 current parser == ONECHAR
	-
parser returned: ONECHAR
: 0
parser returned: &&: 0
<eol> exited with status: 0
parser returned: +: 1
parser returned: &&: 1
<rule> exited with status: 1
___
TEST
____
<rule>: 
___
TEST
____
<whitespace>: 
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR 	-
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
<whitespace> exited with status: 1
___
TEST
____
<rule_name>: 
___
TEST
____
 current parser == ONECHAR<	-
parser returned: ONECHAR<: 0
parser returned: &&: 0
<rule_name> exited with status: 0
parser returned: &&: 0
<rule> exited with status: 0
parser returned: +: 1
<syntax> exited with status: 1
___
eval terminated
____
___
LOL
____
				+					
			expression|				
		(+	number+	)		
	&&	|		
(spe*	subexpr&&	spe*	op|	spe*	)(1	2	3	4	5	6	7	8	9	0	)
|	(number+	spe*	op|	spe*	number+	)|	(+	-	/	*	)|	
(_	tab	)|	|	(+	-	/	*	)|	|	(_	tab	)(_	tab	)
(1	2	3	4	5	6	7	8	9	0	)(_	tab	)(_	tab	)(1	2	3	4	5	6	7	8	9	0	)
___
get_grammar_syntax terminated
____
___
TEST
____
 current parser == +	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
expression: 
___
TEST
____
 current parser == +	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == &&	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
spe: 
___
TEST
____
 current parser == |	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-123 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-123 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
subexpr: 
___
TEST
____
number: 
___
TEST
____
 current parser == |	-123 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-123 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-23 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-23 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-23 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-3 + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-3 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-3 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-3 + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 1
parser returned: |: 1
___
TEST
____
 current parser == |	- + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 1
number exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- + 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- + 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-+ 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
op: 
___
TEST
____
 current parser == ONECHAR+	-+ 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR+: 1
parser returned: |: 1
op exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- 123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- 123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
number: 
___
TEST
____
 current parser == |	-123 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-123 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-23 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-23 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-23 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-3 - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-3 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-3 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-3 - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 1
parser returned: |: 1
___
TEST
____
 current parser == |	- - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 1
number exited with status: 1
parser returned: &&: 1
subexpr exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- - 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- - 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-- 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-- 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-- 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
op: 
___
TEST
____
 current parser == ONECHAR+	-- 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR+: 0
___
TEST
____
 current parser == ONECHAR-	-- 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR-: 1
parser returned: |: 1
op exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- 123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- 123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-123 / 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-123 / 785 * 45 / 78 - 45
___
TEST
____
spe: 
___
TEST
____
 current parser == |	-123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-123 / 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-123 / 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
subexpr: 
___
TEST
____
number: 
___
TEST
____
 current parser == |	-123 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-123 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-23 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-23 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-23 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-3 / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-3 / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-3 / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-3 / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 1
parser returned: |: 1
___
TEST
____
 current parser == |	- / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	- / 785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	- / 785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	- / 785 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	- / 785 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	- / 785 * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	- / 785 * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	- / 785 * 45 / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	- / 785 * 45 / 78 - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	- / 785 * 45 / 78 - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	- / 785 * 45 / 78 - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 1
number exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- / 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- / 785 * 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-/ 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-/ 785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-/ 785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
op: 
___
TEST
____
 current parser == ONECHAR+	-/ 785 * 45 / 78 - 45
parser returned: ONECHAR+: 0
___
TEST
____
 current parser == ONECHAR-	-/ 785 * 45 / 78 - 45
parser returned: ONECHAR-: 0
___
TEST
____
 current parser == ONECHAR/	-/ 785 * 45 / 78 - 45
parser returned: ONECHAR/: 1
parser returned: |: 1
op exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- 785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- 785 * 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-785 * 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-785 * 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
number: 
___
TEST
____
 current parser == |	-785 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-785 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-785 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-785 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-785 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-785 * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-785 * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-785 * 45 / 78 - 45
parser returned: ONECHAR7: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-85 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-85 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-85 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-85 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-85 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-85 * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-85 * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-85 * 45 / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	-85 * 45 / 78 - 45
parser returned: ONECHAR8: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-5 * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-5 * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-5 * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-5 * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-5 * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-5 * 45 / 78 - 45
parser returned: ONECHAR5: 1
parser returned: |: 1
___
TEST
____
 current parser == |	- * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	- * 45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	- * 45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	- * 45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	- * 45 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	- * 45 / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	- * 45 / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	- * 45 / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	- * 45 / 78 - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	- * 45 / 78 - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	- * 45 / 78 - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 1
number exited with status: 1
parser returned: &&: 1
subexpr exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- * 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- * 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-* 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-* 45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-* 45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
op: 
___
TEST
____
 current parser == ONECHAR+	-* 45 / 78 - 45
parser returned: ONECHAR+: 0
___
TEST
____
 current parser == ONECHAR-	-* 45 / 78 - 45
parser returned: ONECHAR-: 0
___
TEST
____
 current parser == ONECHAR/	-* 45 / 78 - 45
parser returned: ONECHAR/: 0
___
TEST
____
 current parser == ONECHAR*	-* 45 / 78 - 45
parser returned: ONECHAR*: 1
parser returned: |: 1
op exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- 45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- 45 / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-45 / 78 - 45
___
TEST
____
spe: 
___
TEST
____
 current parser == |	-45 / 78 - 45
___
TEST
____
 current parser == ONECHAR 	-45 / 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-45 / 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
subexpr: 
___
TEST
____
number: 
___
TEST
____
 current parser == |	-45 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-45 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-45 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-45 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-45 / 78 - 45
parser returned: ONECHAR4: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-5 / 78 - 45
___
TEST
____
 current parser == ONECHAR1	-5 / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-5 / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-5 / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-5 / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-5 / 78 - 45
parser returned: ONECHAR5: 1
parser returned: |: 1
___
TEST
____
 current parser == |	- / 78 - 45
___
TEST
____
 current parser == ONECHAR1	- / 78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	- / 78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	- / 78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	- / 78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	- / 78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	- / 78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	- / 78 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	- / 78 - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	- / 78 - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	- / 78 - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 1
number exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- / 78 - 45
___
TEST
____
 current parser == ONECHAR 	- / 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-/ 78 - 45
___
TEST
____
 current parser == ONECHAR 	-/ 78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-/ 78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
op: 
___
TEST
____
 current parser == ONECHAR+	-/ 78 - 45
parser returned: ONECHAR+: 0
___
TEST
____
 current parser == ONECHAR-	-/ 78 - 45
parser returned: ONECHAR-: 0
___
TEST
____
 current parser == ONECHAR/	-/ 78 - 45
parser returned: ONECHAR/: 1
parser returned: |: 1
op exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- 78 - 45
___
TEST
____
 current parser == ONECHAR 	- 78 - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-78 - 45
___
TEST
____
 current parser == ONECHAR 	-78 - 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-78 - 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
number: 
___
TEST
____
 current parser == |	-78 - 45
___
TEST
____
 current parser == ONECHAR1	-78 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-78 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-78 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-78 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-78 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-78 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-78 - 45
parser returned: ONECHAR7: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-8 - 45
___
TEST
____
 current parser == ONECHAR1	-8 - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-8 - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-8 - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-8 - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-8 - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-8 - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-8 - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	-8 - 45
parser returned: ONECHAR8: 1
parser returned: |: 1
___
TEST
____
 current parser == |	- - 45
___
TEST
____
 current parser == ONECHAR1	- - 45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	- - 45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	- - 45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	- - 45
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	- - 45
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	- - 45
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	- - 45
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	- - 45
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	- - 45
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	- - 45
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 1
number exited with status: 1
parser returned: &&: 1
subexpr exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- - 45
___
TEST
____
 current parser == ONECHAR 	- - 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-- 45
___
TEST
____
 current parser == ONECHAR 	-- 45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-- 45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
op: 
___
TEST
____
 current parser == ONECHAR+	-- 45
parser returned: ONECHAR+: 0
___
TEST
____
 current parser == ONECHAR-	-- 45
parser returned: ONECHAR-: 1
parser returned: |: 1
op exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	- 45
___
TEST
____
 current parser == ONECHAR 	- 45
parser returned: ONECHAR : 1
parser returned: |: 1
___
TEST
____
 current parser == |	-45
___
TEST
____
 current parser == ONECHAR 	-45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
parser returned: &&: 1
___
TEST
____
 current parser == &&	-45
___
TEST
____
spe: 
___
TEST
____
 current parser == |	-45
___
TEST
____
 current parser == ONECHAR 	-45
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-45
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
subexpr: 
___
TEST
____
number: 
___
TEST
____
 current parser == |	-45
___
TEST
____
 current parser == ONECHAR1	-45
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-45
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-45
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-45
parser returned: ONECHAR4: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-5
___
TEST
____
 current parser == ONECHAR1	-5
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-5
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-5
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-5
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-5
parser returned: ONECHAR5: 1
parser returned: |: 1
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR1	-
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	-
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	-
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	-
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 1
number exited with status: 1
___
TEST
____
spe: 
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR 	-
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
op: 
___
TEST
____
 current parser == ONECHAR+	-
parser returned: ONECHAR+: 0
___
TEST
____
 current parser == ONECHAR-	-
parser returned: ONECHAR-: 0
___
TEST
____
 current parser == ONECHAR/	-
parser returned: ONECHAR/: 0
___
TEST
____
 current parser == ONECHAR*	-
parser returned: ONECHAR*: 0
parser returned: |: 0
op exited with status: 0
parser returned: &&: 0
subexpr exited with status: 0
parser returned: &&: 0
parser returned: +: 1
parser returned: |: 1
expression exited with status: 1
___
TEST
____
expression: 
___
TEST
____
 current parser == +	-
___
TEST
____
 current parser == &&	-
___
TEST
____
spe: 
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR 	-
parser returned: ONECHAR : 0
___
TEST
____
 current parser == ONECHAR		-
parser returned: ONECHAR	: 0
parser returned: |: 0
parser returned: *: 1
spe exited with status: 1
___
TEST
____
subexpr: 
___
TEST
____
number: 
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR1	-
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	-
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	-
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	-
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 0
number exited with status: 0
parser returned: &&: 0
subexpr exited with status: 0
parser returned: &&: 0
parser returned: +: 0
___
TEST
____
number: 
___
TEST
____
 current parser == |	-
___
TEST
____
 current parser == ONECHAR1	-
parser returned: ONECHAR1: 0
___
TEST
____
 current parser == ONECHAR2	-
parser returned: ONECHAR2: 0
___
TEST
____
 current parser == ONECHAR3	-
parser returned: ONECHAR3: 0
___
TEST
____
 current parser == ONECHAR4	-
parser returned: ONECHAR4: 0
___
TEST
____
 current parser == ONECHAR5	-
parser returned: ONECHAR5: 0
___
TEST
____
 current parser == ONECHAR6	-
parser returned: ONECHAR6: 0
___
TEST
____
 current parser == ONECHAR7	-
parser returned: ONECHAR7: 0
___
TEST
____
 current parser == ONECHAR8	-
parser returned: ONECHAR8: 0
___
TEST
____
 current parser == ONECHAR9	-
parser returned: ONECHAR9: 0
___
TEST
____
 current parser == ONECHAR0	-
parser returned: ONECHAR0: 0
parser returned: |: 0
parser returned: +: 0
number exited with status: 0
parser returned: |: 0
expression exited with status: 0
parser returned: +: 1
___
EVAL_INPUT TERMINATED
____
				+					
			expression|				
		(+	number+	)		
	&&	|		
(spe*	subexpr&&	spe*	op|	spe*	)(1	2	3	4	5	6	7	8	9	0	)
|	(number+	spe*	op|	spe*	number+	)|	(+	-	/	*	)|	
(_	tab	)|	|	(+	-	/	*	)|	|	(_	tab	)(_	tab	)
(1	2	3	4	5	6	7	8	9	0	)(_	tab	)(_	tab	)(1	2	3	4	5	6	7	8	9	0	)
str = <>
